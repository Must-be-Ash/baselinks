/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fashnouruzi%2Fembbed-wallet-docs%2Fprompt-generator%2Fapp%2Fpage.tsx&server=false!":
/*!**********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fashnouruzi%2Fembbed-wallet-docs%2Fprompt-generator%2Fapp%2Fpage.tsx&server=false! ***!
  \**********************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/page.tsx */ \"(app-pages-browser)/./app/page.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZVc2VycyUyRmFzaG5vdXJ1emklMkZlbWJiZWQtd2FsbGV0LWRvY3MlMkZwcm9tcHQtZ2VuZXJhdG9yJTJGYXBwJTJGcGFnZS50c3gmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzcyYWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvYXNobm91cnV6aS9lbWJiZWQtd2FsbGV0LWRvY3MvcHJvbXB0LWdlbmVyYXRvci9hcHAvcGFnZS50c3hcIikiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fashnouruzi%2Fembbed-wallet-docs%2Fprompt-generator%2Fapp%2Fpage.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PromptGenerator; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction PromptGenerator() {\n    _s();\n    const [userInfo, setUserInfo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        name: \"\",\n        bio: \"\",\n        twitterUrl: \"\",\n        personalSiteUrl: \"\",\n        linktreeUrl: \"\",\n        cdpProjectId: \"\",\n        walletAddress: \"\",\n        imageUrl: \"\"\n    });\n    const [generatedPrompt, setGeneratedPrompt] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [showPrompt, setShowPrompt] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [uploadLoading, setUploadLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [uploadError, setUploadError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const handleInputChange = (field, value)=>{\n        setUserInfo((prev)=>({\n                ...prev,\n                [field]: value\n            }));\n    };\n    const handleImageUpload = async (event)=>{\n        var _event_target_files;\n        const file = (_event_target_files = event.target.files) === null || _event_target_files === void 0 ? void 0 : _event_target_files[0];\n        if (!file) return;\n        setUploadLoading(true);\n        setUploadError(null);\n        try {\n            const formData = new FormData();\n            formData.append(\"file\", file);\n            const response = await fetch(\"/api/upload\", {\n                method: \"POST\",\n                body: formData\n            });\n            const result = await response.json();\n            if (result.success) {\n                setUserInfo((prev)=>({\n                        ...prev,\n                        imageUrl: result.url\n                    }));\n            } else {\n                setUploadError(result.error || \"Failed to upload image\");\n            }\n        } catch (error) {\n            setUploadError(\"Failed to upload image\");\n        } finally{\n            setUploadLoading(false);\n        }\n    };\n    const generateCustomPrompt = ()=>{\n        const customPrompt = \"# Add Crypto Donations to \".concat(userInfo.name, \"'s Linktree Page\\n\\n**Purpose:** Customize \").concat(userInfo.name, \"'s existing linktree webpage with crypto donation functionality using [CDP Embedded Wallets](https://docs.cdp.coinbase.com/embedded-wallets).  \\n**Scope:** All AI-generated advice for adding donations to \").concat(userInfo.name, \"'s linktree must follow these guardrails.\\n\\n---\\n\\n## **1. \").concat(userInfo.name, \"'s Donation Integration Overview**\\n\\n\").concat(userInfo.bio ? \"About \".concat(userInfo.name, \": \").concat(userInfo.bio) : \"This prompt helps \".concat(userInfo.name, \" add crypto donation functionality to their existing linktree page.\"), \"\\n\\n### **\").concat(userInfo.name, \"'s Links:**\\n\").concat(userInfo.twitterUrl ? \"- Twitter: \".concat(userInfo.twitterUrl) : \"\", \"\\n\").concat(userInfo.personalSiteUrl ? \"- Website: \".concat(userInfo.personalSiteUrl) : \"\", \"\\n\").concat(userInfo.linktreeUrl ? \"- Linktree: \".concat(userInfo.linktreeUrl) : \"\", \"\\n\\n### **What \").concat(userInfo.name, ' Will Get:**\\n- \"Support ').concat(userInfo.name, '\" donation button for linktree\\n- Users donate via email sign-in (no wallet needed)\\n- Donations sent directly to ').concat(userInfo.name, \"'s wallet\\n- Works on Base network (low fees)\\n- Mobile-friendly donation flow\\n\\n### **Perfect For \").concat(userInfo.name, \"'s Use Cases:**\\n- Content creator support\\n- Social media monetization\\n- Personal brand funding\\n- Community support\\n\\n---\\n\\n## **2. \\uD83D\\uDEA8 CRITICAL INSTRUCTIONS FOR AI LANGUAGE MODELS \\uD83D\\uDEA8**\\n\\n### **2.1 – ABSOLUTE REQUIREMENTS FOR \").concat(userInfo.name.toUpperCase(), \"'S DONATION SETUP**\\n\\nYou **MUST** follow these requirements or \").concat(userInfo.name, \"'s donations will **BREAK**:\\n\\n1. **ALWAYS use \").concat(userInfo.name, \"'s wallet address** - Donations must go to: `\").concat(userInfo.walletAddress || \"USER_WALLET_ADDRESS\", \"`\\n2. **ALWAYS use \").concat(userInfo.name, \"'s CDP Project ID** - Must be: `\").concat(userInfo.cdpProjectId || \"USER_CDP_PROJECT_ID\", \"`\\n3. **ALWAYS configure CORS first** - \").concat(userInfo.name, \"'s donations fail without proper CORS setup  \\n4. **ALWAYS use Base Sepolia for testing** - Don't lose \").concat(userInfo.name, '\\'s real money during development\\n\\n### **2.2 – CRITICAL ERROR PATTERNS TO AVOID**\\n\\n```tsx\\n// ❌ NEVER GENERATE THIS - WRONG RECIPIENT ADDRESS\\nconst DONATION_ADDRESS = \"0x123...\"; // Must be ').concat(userInfo.name, \"'s actual wallet: \").concat(userInfo.walletAddress || \"USER_WALLET_ADDRESS\", '\\n\\n// ❌ NEVER GENERATE THIS - WRONG PROJECT ID  \\nprojectId: \"wrong-id\", // Must be ').concat(userInfo.name, \"'s CDP ID: \").concat(userInfo.cdpProjectId || \"USER_CDP_PROJECT_ID\", \"\\n\\n// ❌ NEVER GENERATE THIS - WRONG NETWORK FOR DONATIONS\\nchainId: 1, // Expensive Ethereum - use Base (8453) for \").concat(userInfo.name, '\\'s donations\\n\\n// ❌ NEVER GENERATE THIS - MISSING CLIENT DIRECTIVE\\nimport { CDPReactProvider } from \"@coinbase/cdp-react\"; // Missing \"use client\"\\n```\\n\\n### **2.3 – CORRECT PATTERNS YOU MUST ALWAYS GENERATE**\\n\\n```tsx\\n// ✅ ALWAYS GENERATE THIS EXACT PATTERN FOR ').concat(userInfo.name.toUpperCase(), \"\\n\\n// \").concat(userInfo.name, \"'s wallet address (where donations go)\\nconst DONATION_ADDRESS = \\\"\").concat(userInfo.walletAddress || \"REPLACE_WITH_YOUR_WALLET_ADDRESS\", '\";\\n\\n// ').concat(userInfo.name, \"'s CDP Project ID\\nconst cdpConfig = {\\n  projectId: \\\"\").concat(userInfo.cdpProjectId || \"REPLACE_WITH_YOUR_CDP_PROJECT_ID\", '\",\\n  basePath: \"https://api.cdp.coinbase.com/platform\",\\n  useMock: false,\\n  debugging: false,\\n};\\n\\n// Base network for low fees\\nchainId: 8453, // Base mainnet\\n\\n// Client directive for components\\n\"use client\";\\nimport { CDPReactProvider } from \"@coinbase/cdp-react\";\\n```\\n\\n---\\n\\n## **3. ').concat(userInfo.name.toUpperCase(), \"'S LINKTREE DONATION IMPLEMENTATION**\\n\\n### **3.1 – \").concat(userInfo.name, \"'s Donation Button Component**\\n\\n```tsx\\n// components/SupportButton.tsx\\n\\\"use client\\\";\\n\\nimport { useState } from 'react';\\nimport { CDPReactProvider } from '@coinbase/cdp-react';\\nimport { \\n  useSendEvmTransaction, \\n  useEvmAddress, \\n  useIsSignedIn, \\n  useIsInitialized \\n} from '@coinbase/cdp-hooks';\\nimport { AuthButton } from '@coinbase/cdp-react';\\nimport { Heart, Loader2 } from 'lucide-react';\\n\\n// \\uD83C\\uDFAF \").concat(userInfo.name, \"'s wallet address (where donations go)\\nconst DONATION_ADDRESS = \\\"\").concat(userInfo.walletAddress || \"REPLACE_WITH_YOUR_WALLET_ADDRESS\", '\";\\n\\n// \\uD83D\\uDD11 ').concat(userInfo.name, \"'s CDP configuration\\nconst cdpConfig = {\\n  projectId: \\\"\").concat(userInfo.cdpProjectId || \"REPLACE_WITH_YOUR_CDP_PROJECT_ID\", '\",\\n  basePath: \"https://api.cdp.coinbase.com/platform\",\\n  useMock: false,\\n  debugging: false,\\n};\\n\\nconst appConfig = {\\n  name: \"Support ').concat(userInfo.name, '\",\\n  logoUrl: \"').concat(userInfo.imageUrl || (userInfo.personalSiteUrl ? userInfo.personalSiteUrl + \"/logo.png\" : \"https://your-site.com/logo.png\"), '\",\\n};\\n\\nfunction DonationForm() {\\n  const [amount, setAmount] = useState(\\'0.005\\');\\n  const [message, setMessage] = useState(\\'\\');\\n  const [isLoading, setIsLoading] = useState(false);\\n  const [txHash, setTxHash] = useState<string | null>(null);\\n  const [error, setError] = useState<string | null>(null);\\n\\n  const sendTransaction = useSendEvmTransaction();\\n  const evmAddress = useEvmAddress();\\n  const isSignedIn = useIsSignedIn();\\n  const isInitialized = useIsInitialized();\\n\\n  const handleDonate = async () => {\\n    if (!evmAddress) return;\\n\\n    setIsLoading(true);\\n    setError(null);\\n\\n    try {\\n      const valueInWei = BigInt(Math.floor(parseFloat(amount) * 1e18));\\n\\n      const result = await sendTransaction({\\n        evmAccount: evmAddress,\\n        transaction: {\\n          to: DONATION_ADDRESS,\\n          value: valueInWei,\\n          chainId: 8453, // Base mainnet (low fees)\\n          type: \"eip1559\",\\n        },\\n        network: \"base\",\\n      });\\n\\n      setTxHash(result.transactionHash);\\n    } catch (error) {\\n      setError(error instanceof Error ? error.message : \\'Donation failed\\');\\n    } finally {\\n      setIsLoading(false);\\n    }\\n  };\\n\\n  if (!isInitialized) {\\n    return (\\n      <div className=\"donation-loading\">\\n        <Loader2 className=\"loading-spinner\" />\\n        <p>Loading donation system...</p>\\n      </div>\\n    );\\n  }\\n\\n  if (txHash) {\\n    return (\\n      <div className=\"donation-success\">\\n        <div className=\"success-icon\">\\n          <Heart className=\"success-heart\" />\\n        </div>\\n        <h3>Thank You for Supporting ').concat(userInfo.name, '!</h3>\\n        <p>Your donation of {amount} ETH was sent successfully!</p>\\n        {message && <p className=\"donation-message\">\"{message}\"</p>}\\n        <a \\n          href={`https://basescan.org/tx/${txHash}`}\\n          target=\"_blank\"\\n          rel=\"noopener noreferrer\"\\n          className=\"transaction-link\"\\n        >\\n          View Transaction\\n        </a>\\n        <button \\n          onClick={() => {\\n            setTxHash(null);\\n            setAmount(\\'0.005\\');\\n            setMessage(\\'\\');\\n          }}\\n          className=\"donate-again-btn\"\\n        >\\n          Support ').concat(userInfo.name, ' Again\\n        </button>\\n      </div>\\n    );\\n  }\\n\\n  if (!isSignedIn) {\\n    return (\\n      <div className=\"donation-signin\">\\n        <div className=\"support-header\">\\n          <h3>\\n            <Heart className=\"support-icon\" />\\n            Support Me\\n          </h3>\\n        </div>\\n        <AuthButton />\\n        <p className=\"powered-by\">Powered by Coinbase • No wallet needed</p>\\n      </div>\\n    );\\n  }\\n\\n  return (\\n    <div className=\"donation-form\">\\n      <div className=\"support-header\">\\n        <h3>\\n          <Heart className=\"support-icon\" />\\n          Support ').concat(userInfo.name, '\\n        </h3>\\n        {userInfo.bio && <p className=\"creator-bio\">').concat(userInfo.bio, '</p>}\\n      </div>\\n      \\n      {error && (\\n        <div className=\"error-message\">\\n          {error}\\n        </div>\\n      )}\\n\\n      <div className=\"amount-selection\">\\n        <label>Choose donation amount:</label>\\n        <select \\n          value={amount}\\n          onChange={(e) => setAmount(e.target.value)}\\n          className=\"amount-select\"\\n        >\\n          <option value=\"0.002\">0.002 ETH (~$5)</option>\\n          <option value=\"0.005\">0.005 ETH (~$12)</option>\\n          <option value=\"0.01\">0.01 ETH (~$25)</option>\\n          <option value=\"0.02\">0.02 ETH (~$50)</option>\\n          <option value=\"0.05\">0.05 ETH (~$125)</option>\\n        </select>\\n      </div>\\n\\n      <div className=\"message-input\">\\n        <label>Optional message for ').concat(userInfo.name, ':</label>\\n        <input\\n          type=\"text\"\\n          value={message}\\n          onChange={(e) => setMessage(e.target.value)}\\n          placeholder=\"Keep up the great work!\"\\n          className=\"message-field\"\\n          maxLength={100}\\n        />\\n      </div>\\n\\n      <button\\n        onClick={handleDonate}\\n        disabled={isLoading}\\n        className=\"donate-button\"\\n      >\\n        {isLoading ? (\\n          <>\\n            <Loader2 className=\"loading-icon\" />\\n            Sending...\\n          </>\\n        ) : (\\n          `Support ').concat(userInfo.name, ' with ${amount} ETH`\\n        )}\\n      </button>\\n\\n      <div className=\"donation-info\">\\n        <p>Sent on Base network • Low fees</p>\\n        <p>Your wallet: {evmAddress?.slice(0, 6)}...{evmAddress?.slice(-4)}</p>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default function SupportButton() {\\n  return (\\n    <CDPReactProvider config={cdpConfig} app={appConfig}>\\n      <DonationForm />\\n    </CDPReactProvider>\\n  );\\n}\\n```\\n\\n### **3.2 – ').concat(userInfo.name, \"'s Linktree Integration**\\n\\n```tsx\\n// pages/index.tsx or app/page.tsx\\nimport SupportButton from '@/components/SupportButton';\\nimport { Twitter, Globe, TreePine } from 'lucide-react';\\n\\nexport default function \").concat(userInfo.name.replace(/\\s+/g, \"\"), 'Linktree() {\\n  return (\\n    <div className=\"linktree-container\">\\n      <div className=\"profile-section\">\\n        <div className=\"profile-image\">\\n          <img src=\"').concat(userInfo.imageUrl || \"/profile.jpg\", '\" alt=\"').concat(userInfo.name, '\" />\\n        </div>\\n        <div className=\"profile-info\">\\n          <h1>').concat(userInfo.name, '</h1>\\n          {userInfo.bio && <p className=\"bio\">').concat(userInfo.bio, '</p>}\\n        </div>\\n      </div>\\n\\n      <div className=\"links-section\">\\n        {userInfo.twitterUrl && \\n        <a href=\"').concat(userInfo.twitterUrl, '\" className=\"link-button\" target=\"_blank\" rel=\"noopener noreferrer\">\\n          <Twitter className=\"link-icon\" />\\n          <span className=\"link-text\">Follow on Twitter</span>\\n        </a>\\n        }\\n        \\n        {userInfo.personalSiteUrl && \\n        <a href=\"').concat(userInfo.personalSiteUrl, '\" className=\"link-button\" target=\"_blank\" rel=\"noopener noreferrer\">\\n          <Globe className=\"link-icon\" />\\n          <span className=\"link-text\">Visit Website</span>\\n        </a>\\n        }\\n        \\n        {userInfo.linktreeUrl && \\n        <a href=\"').concat(userInfo.linktreeUrl, '\" className=\"link-button\" target=\"_blank\" rel=\"noopener noreferrer\">\\n          <TreePine className=\"link-icon\" />\\n          <span className=\"link-text\">Linktree</span>\\n        </a>\\n        }\\n        \\n        {/* Add your other links here */}\\n      </div>\\n\\n      {/* ').concat(userInfo.name, '\\'s Crypto Donation Section */}\\n      <div className=\"donation-section\">\\n        <SupportButton />\\n      </div>\\n\\n      <footer className=\"linktree-footer\">\\n        <p>\\xa9 ').concat(new Date().getFullYear(), \" \").concat(userInfo.name, \"</p>\\n      </footer>\\n    </div>\\n  );\\n}\\n```\\n\\n### **3.3 – \").concat(userInfo.name, \"'s Elegant Linktree Styling**\\n\\n```css\\n/* styles/globals.css */\\n* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n}\\n\\nbody {\\n  background: #000000;\\n  color: #ffffff;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\\n  min-height: 100vh;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.linktree-container {\\n  max-width: 680px;\\n  width: 100%;\\n  padding: 40px 20px;\\n  text-align: center;\\n}\\n\\n/* Profile Section */\\n.profile-section {\\n  margin-bottom: 48px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.profile-image {\\n  margin-bottom: 24px;\\n}\\n\\n.profile-image img {\\n  width: 96px;\\n  height: 96px;\\n  border-radius: 50%;\\n  object-fit: cover;\\n  border: 3px solid #0052FF;\\n}\\n\\n.profile-info {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  text-align: center;\\n}\\n\\n.profile-info h1 {\\n  font-size: 24px;\\n  font-weight: 700;\\n  margin-bottom: 8px;\\n  color: #fff;\\n}\\n\\n.bio {\\n  color: #a3a3a3;\\n  font-size: 16px;\\n  line-height: 1.4;\\n  margin: 0;\\n  max-width: 480px;\\n}\\n\\n/* Links Section */\\n.links-section {\\n  margin-bottom: 48px;\\n}\\n\\n.link-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 16px 20px;\\n  margin: 12px 0;\\n  background: transparent;\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  border-radius: 12px;\\n  text-decoration: none;\\n  color: #fff;\\n  font-weight: 600;\\n  font-size: 16px;\\n  transition: all 0.2s ease;\\n  position: relative;\\n}\\n\\n.link-button:hover {\\n  background: rgba(255, 255, 255, 0.1);\\n  border-color: rgba(255, 255, 255, 0.3);\\n  transform: translateY(-1px);\\n}\\n\\n.link-icon {\\n  margin-right: 12px;\\n  width: 20px;\\n  height: 20px;\\n  flex-shrink: 0;\\n}\\n\\n.link-text {\\n  text-align: center;\\n  flex: 1;\\n}\\n\\n/* Donation Section */\\n.donation-section {\\n  margin-top: 32px;\\n}\\n\\n.donation-signin,\\n.donation-form {\\n  background: transparent;\\n  padding: 24px;\\n  text-align: center;\\n}\\n\\n.support-header {\\n  margin-bottom: 16px;\\n}\\n\\n.support-header h3 {\\n  font-size: 20px;\\n  font-weight: 700;\\n  color: #fff;\\n  margin-bottom: 8px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 8px;\\n}\\n\\n.support-icon {\\n  width: 24px;\\n  height: 24px;\\n  color: #ff6b6b;\\n}\\n\\n.creator-bio {\\n  color: #a3a3a3;\\n  font-size: 14px;\\n  margin-bottom: 16px;\\n}\\n\\n.donation-signin p {\\n  color: #a3a3a3;\\n  font-size: 16px;\\n  margin-bottom: 24px;\\n}\\n\\n/* Sign In Button */\\n.donation-signin button,\\n.donate-button,\\n.donate-again-btn {\\n  background: #0052FF;\\n  color: #fff;\\n  border: none;\\n  border-radius: 50px;\\n  padding: 12px 32px;\\n  font-size: 16px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n  min-width: 120px;\\n  display: inline-flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 8px;\\n}\\n\\n.donation-signin button:hover,\\n.donate-button:hover:not(:disabled),\\n.donate-again-btn:hover {\\n  background: #0041CC;\\n  transform: translateY(-1px);\\n}\\n\\n.donate-button:disabled {\\n  background: #666;\\n  cursor: not-allowed;\\n  transform: none;\\n}\\n\\n.loading-icon {\\n  width: 16px;\\n  height: 16px;\\n  animation: spin 1s linear infinite;\\n}\\n\\n/* Form Elements */\\n.amount-selection,\\n.message-input {\\n  margin: 20px 0;\\n  text-align: left;\\n}\\n\\n.amount-selection label,\\n.message-input label {\\n  display: block;\\n  color: #fff;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin-bottom: 8px;\\n}\\n\\n.amount-select,\\n.message-field {\\n  width: 100%;\\n  padding: 12px 16px;\\n  background: rgba(255, 255, 255, 0.1);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  border-radius: 8px;\\n  color: #fff;\\n  font-size: 16px;\\n}\\n\\n.amount-select:focus,\\n.message-field:focus {\\n  outline: none;\\n  border-color: #0052FF;\\n  background: rgba(255, 255, 255, 0.15);\\n}\\n\\n/* Success State */\\n.donation-success {\\n  background: transparent;\\n  padding: 32px 24px;\\n  text-align: center;\\n}\\n\\n.success-icon {\\n  margin-bottom: 16px;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.success-heart {\\n  width: 48px;\\n  height: 48px;\\n  color: #ff6b6b;\\n}\\n\\n.donation-success h3 {\\n  color: #fff;\\n  font-size: 20px;\\n  font-weight: 700;\\n  margin-bottom: 8px;\\n}\\n\\n.donation-success p {\\n  color: #a3a3a3;\\n  margin-bottom: 16px;\\n}\\n\\n.donation-message {\\n  color: #fff;\\n  font-style: italic;\\n  background: rgba(255, 255, 255, 0.1);\\n  padding: 12px;\\n  border-radius: 8px;\\n  margin: 16px 0;\\n}\\n\\n.transaction-link {\\n  color: #0052FF;\\n  text-decoration: none;\\n  font-weight: 600;\\n}\\n\\n.transaction-link:hover {\\n  text-decoration: underline;\\n}\\n\\n/* Social Links */\\n.social-links {\\n  margin: 16px 0;\\n  display: flex;\\n  gap: 16px;\\n  justify-content: center;\\n}\\n\\n.social-link {\\n  color: #0052FF;\\n  text-decoration: none;\\n  font-size: 14px;\\n  font-weight: 500;\\n}\\n\\n.social-link:hover {\\n  text-decoration: underline;\\n}\\n\\n/* Info Text */\\n.powered-by,\\n.donation-info {\\n  color: #a3a3a3;\\n  font-size: 12px;\\n  margin-top: 16px;\\n}\\n\\n.donation-info p {\\n  margin: 4px 0;\\n}\\n\\n/* Error State */\\n.error-message {\\n  background: rgba(239, 68, 68, 0.2);\\n  border: 1px solid rgba(239, 68, 68, 0.3);\\n  color: #fca5a5;\\n  padding: 12px;\\n  border-radius: 8px;\\n  margin-bottom: 16px;\\n  font-size: 14px;\\n}\\n\\n/* Loading State */\\n.donation-loading {\\n  padding: 40px;\\n  text-align: center;\\n}\\n\\n.loading-spinner {\\n  width: 32px;\\n  height: 32px;\\n  animation: spin 1s linear infinite;\\n  margin: 0 auto 16px;\\n  color: #0052FF;\\n}\\n\\n@keyframes spin {\\n  0% { transform: rotate(0deg); }\\n  100% { transform: rotate(360deg); }\\n}\\n\\n/* Footer */\\n.linktree-footer {\\n  margin-top: 48px;\\n  padding-top: 24px;\\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\\n}\\n\\n.linktree-footer p {\\n  color: #a3a3a3;\\n  font-size: 12px;\\n}\\n\\n/* Responsive */\\n@media (max-width: 480px) {\\n  .linktree-container {\\n    padding: 32px 16px;\\n  }\\n  \\n  .profile-image img {\\n    width: 80px;\\n    height: 80px;\\n  }\\n  \\n  .profile-info h1 {\\n    font-size: 20px;\\n  }\\n  \\n  .link-button {\\n    padding: 14px 16px;\\n  }\\n}\\n```\\n\\n---\\n\\n## **4. \").concat(userInfo.name.toUpperCase(), \"'S SETUP CHECKLIST**\\n\\n### **4.1 – Before \").concat(userInfo.name, \" Starts**\\n\\n- [ ] ✅ CDP Project ID: `\").concat(userInfo.cdpProjectId || \"GET_FROM_CDP_PORTAL\", \"`\\n- [ ] \").concat(userInfo.walletAddress ? \"✅\" : \"❌\", \" Wallet Address: `\").concat(userInfo.walletAddress || \"GET_YOUR_WALLET_ADDRESS\", \"`\\n- [ ] Add \").concat(userInfo.personalSiteUrl || \"your-domain.com\", \" to CORS settings at https://portal.cdp.coinbase.com/products/embedded-wallets/cors\\n\\n### **4.2 – \").concat(userInfo.name, \"'s Development Setup**\\n\\n- [ ] Install packages: `npm install @coinbase/cdp-react @coinbase/cdp-core @coinbase/cdp-hooks lucide-react`\\n- [ ] Add environment variable: `NEXT_PUBLIC_CDP_PROJECT_ID=\").concat(userInfo.cdpProjectId || \"your-project-id\", \"`\\n- [ ] Test on Base Sepolia first (chainId: 84532)\\n- [ ] Verify donations go to \").concat(userInfo.name, \"'s wallet: `\").concat(userInfo.walletAddress || \"your-wallet-address\", \"`\\n\\n### **4.3 – \").concat(userInfo.name, \"'s Production Launch**\\n\\n- [ ] Switch to Base mainnet (chainId: 8453)\\n- [ ] Add production domain to CORS: \").concat(userInfo.personalSiteUrl || \"your-domain.com\", \"\\n- [ ] Test full donation flow\\n- [ ] Share \").concat(userInfo.name, \"'s enhanced linktree with crypto support!\\n\\n---\\n\\n## **5. AI MODEL VERIFICATION STEPS**\\n\\nBefore generating code for \").concat(userInfo.name, \"'s linktree donations, you **MUST** verify:\\n\\n1. **\").concat(userInfo.name, \"'s Wallet**: Is donation address set to `\").concat(userInfo.walletAddress || \"USER_WALLET_ADDRESS\", \"`?\\n2. **\").concat(userInfo.name, \"'s CDP ID**: Is project ID set to `\").concat(userInfo.cdpProjectId || \"USER_CDP_PROJECT_ID\", \"`?\\n3. **\").concat(userInfo.name, \"'s Branding**: Are you using \\\"\").concat(userInfo.name, '\" in UI text and titles?\\n4. **Base Network**: Are you using Base (8453) for ').concat(userInfo.name, \"'s low-fee donations?\\n5. **CORS Instructions**: Did you mention \").concat(userInfo.personalSiteUrl || \"user-domain\", \" CORS setup?\\n6. **Linktree Context**: Is the code designed for \").concat(userInfo.name, \"'s linktree page integration?\\n\\nIf ANY check **fails**, **STOP** and revise until compliance is achieved.\\n\\n---\\n\\n## **6. CONSEQUENCES OF INCORRECT IMPLEMENTATION**\\n\\nIf you generate code that doesn't use \").concat(userInfo.name, \"'s specific details:\\n\\n1. **Wrong wallet address** → Donations won't reach \").concat(userInfo.name, \"\\n2. **Wrong CDP Project ID** → \").concat(userInfo.name, \"'s app won't work\\n3. **Wrong branding** → Confusing user experience for \").concat(userInfo.name, \"'s audience\\n4. **Expensive network** → \").concat(userInfo.name, \"'s supporters won't donate due to high fees\\n\\n---\\n\\n## **7. AI MODEL RESPONSE TEMPLATE**\\n\\nWhen implementing \").concat(userInfo.name, \"'s linktree crypto donations, you **MUST**:\\n\\n1. **ALWAYS** use \").concat(userInfo.name, \"'s wallet address: `\").concat(userInfo.walletAddress || \"USER_ADDRESS\", \"`\\n2. **ALWAYS** use \").concat(userInfo.name, \"'s CDP Project ID: `\").concat(userInfo.cdpProjectId || \"USER_PROJECT_ID\", '`\\n3. **ALWAYS** brand everything for \"').concat(userInfo.name, '\" specifically  \\n4. **ALWAYS** use Base network for ').concat(userInfo.name, \"'s low-fee donations\\n5. **NEVER** use generic placeholders - this is \").concat(userInfo.name, \"'s custom implementation\\n6. **VERIFY** all \").concat(userInfo.name, \"-specific details are correctly implemented\\n\\n**Remember: This is \").concat(userInfo.name.toUpperCase(), \"'s personalized donation system - there are NO EXCEPTIONS to these rules.**\");\n        setGeneratedPrompt(customPrompt);\n        setShowPrompt(true);\n    };\n    const copyToClipboard = ()=>{\n        navigator.clipboard.writeText(generatedPrompt);\n        alert(\"Prompt copied to clipboard!\");\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            minHeight: \"100vh\",\n            background: \"#FFFFFF\",\n            color: \"#000000\",\n            fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n            padding: \"40px 20px\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                maxWidth: \"600px\",\n                margin: \"0 auto\"\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        textAlign: \"center\",\n                        marginBottom: \"40px\"\n                    },\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        style: {\n                            color: \"#666666\",\n                            fontSize: \"16px\",\n                            maxWidth: \"480px\",\n                            margin: \"0 auto\",\n                            lineHeight: \"1.5\"\n                        },\n                        children: \"Create a custom prompt for making your own linktree\"\n                    }, void 0, false, {\n                        fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                        lineNumber: 877,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                    lineNumber: 875,\n                    columnNumber: 9\n                }, this),\n                !showPrompt ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        background: \"#222222\",\n                        padding: \"32px\",\n                        borderRadius: \"16px\",\n                        border: \"1px solid rgba(255, 255, 255, 0.1)\",\n                        boxSizing: \"border-box\"\n                    },\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                marginBottom: \"24px\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    style: {\n                                        display: \"block\",\n                                        marginBottom: \"8px\",\n                                        fontWeight: \"600\",\n                                        color: \"#FFFFFF\",\n                                        fontSize: \"14px\"\n                                    },\n                                    children: \"Your Name *\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 897,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"text\",\n                                    value: userInfo.name,\n                                    onChange: (e)=>handleInputChange(\"name\", e.target.value),\n                                    placeholder: \"e.g., John Doe\",\n                                    style: {\n                                        width: \"100%\",\n                                        padding: \"14px 16px\",\n                                        border: \"1px solid rgba(255, 255, 255, 0.2)\",\n                                        borderRadius: \"12px\",\n                                        fontSize: \"16px\",\n                                        background: \"rgba(255, 255, 255, 0.05)\",\n                                        color: \"#FFFFFF\",\n                                        outline: \"none\",\n                                        transition: \"border-color 0.2s ease\",\n                                        boxSizing: \"border-box\"\n                                    },\n                                    onFocus: (e)=>e.target.style.borderColor = \"#0052FF\",\n                                    onBlur: (e)=>e.target.style.borderColor = \"rgba(255, 255, 255, 0.2)\",\n                                    required: true\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 906,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                            lineNumber: 896,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                marginBottom: \"24px\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    style: {\n                                        display: \"block\",\n                                        marginBottom: \"8px\",\n                                        fontWeight: \"600\",\n                                        color: \"#FFFFFF\",\n                                        fontSize: \"14px\"\n                                    },\n                                    children: \"Your Bio\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 930,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                    value: userInfo.bio,\n                                    onChange: (e)=>handleInputChange(\"bio\", e.target.value),\n                                    placeholder: \"e.g., Content creator, developer, artist...\",\n                                    rows: 3,\n                                    style: {\n                                        width: \"100%\",\n                                        padding: \"14px 16px\",\n                                        border: \"1px solid rgba(255, 255, 255, 0.2)\",\n                                        borderRadius: \"12px\",\n                                        fontSize: \"16px\",\n                                        background: \"rgba(255, 255, 255, 0.05)\",\n                                        color: \"#FFFFFF\",\n                                        outline: \"none\",\n                                        resize: \"vertical\",\n                                        fontFamily: \"inherit\",\n                                        transition: \"border-color 0.2s ease\",\n                                        boxSizing: \"border-box\"\n                                    },\n                                    onFocus: (e)=>e.target.style.borderColor = \"#0052FF\",\n                                    onBlur: (e)=>e.target.style.borderColor = \"rgba(255, 255, 255, 0.2)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 939,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                            lineNumber: 929,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                marginBottom: \"24px\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    style: {\n                                        display: \"block\",\n                                        marginBottom: \"8px\",\n                                        fontWeight: \"600\",\n                                        color: \"#FFFFFF\",\n                                        fontSize: \"14px\"\n                                    },\n                                    children: \"Profile Image\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 964,\n                                    columnNumber: 15\n                                }, this),\n                                userInfo.imageUrl && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        marginBottom: \"12px\",\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                        gap: \"12px\"\n                                    },\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                            src: userInfo.imageUrl,\n                                            alt: \"Profile preview\",\n                                            style: {\n                                                width: \"60px\",\n                                                height: \"60px\",\n                                                borderRadius: \"50%\",\n                                                objectFit: \"cover\",\n                                                border: \"2px solid #0052FF\"\n                                            }\n                                        }, void 0, false, {\n                                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                            lineNumber: 981,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            type: \"button\",\n                                            onClick: ()=>setUserInfo((prev)=>({\n                                                        ...prev,\n                                                        imageUrl: \"\"\n                                                    })),\n                                            style: {\n                                                padding: \"6px 12px\",\n                                                background: \"rgba(255, 0, 0, 0.2)\",\n                                                color: \"#ff6b6b\",\n                                                border: \"1px solid rgba(255, 0, 0, 0.3)\",\n                                                borderRadius: \"6px\",\n                                                fontSize: \"12px\",\n                                                cursor: \"pointer\"\n                                            },\n                                            children: \"Remove\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                            lineNumber: 992,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 975,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"file\",\n                                    accept: \"image/*\",\n                                    onChange: handleImageUpload,\n                                    disabled: uploadLoading,\n                                    style: {\n                                        width: \"100%\",\n                                        padding: \"14px 16px\",\n                                        border: \"1px solid rgba(255, 255, 255, 0.2)\",\n                                        borderRadius: \"12px\",\n                                        fontSize: \"16px\",\n                                        background: \"rgba(255, 255, 255, 0.05)\",\n                                        color: \"#FFFFFF\",\n                                        outline: \"none\",\n                                        transition: \"border-color 0.2s ease\",\n                                        boxSizing: \"border-box\",\n                                        cursor: uploadLoading ? \"not-allowed\" : \"pointer\"\n                                    },\n                                    onFocus: (e)=>e.target.style.borderColor = \"#0052FF\",\n                                    onBlur: (e)=>e.target.style.borderColor = \"rgba(255, 255, 255, 0.2)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1010,\n                                    columnNumber: 15\n                                }, this),\n                                uploadLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"small\", {\n                                    style: {\n                                        color: \"#0052FF\",\n                                        fontSize: \"12px\",\n                                        display: \"block\",\n                                        marginTop: \"4px\"\n                                    },\n                                    children: \"Uploading image...\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1033,\n                                    columnNumber: 17\n                                }, this),\n                                uploadError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"small\", {\n                                    style: {\n                                        color: \"#ff6b6b\",\n                                        fontSize: \"12px\",\n                                        display: \"block\",\n                                        marginTop: \"4px\"\n                                    },\n                                    children: uploadError\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1044,\n                                    columnNumber: 17\n                                }, this),\n                                !uploadLoading && !uploadError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"small\", {\n                                    style: {\n                                        color: \"#a3a3a3\",\n                                        fontSize: \"12px\",\n                                        display: \"block\",\n                                        marginTop: \"4px\"\n                                    },\n                                    children: \"Upload your profile picture (max 5MB)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1055,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                            lineNumber: 963,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                marginBottom: \"24px\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    style: {\n                                        display: \"block\",\n                                        marginBottom: \"8px\",\n                                        fontWeight: \"600\",\n                                        color: \"#FFFFFF\",\n                                        fontSize: \"14px\"\n                                    },\n                                    children: \"Twitter URL\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1067,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"url\",\n                                    value: userInfo.twitterUrl,\n                                    onChange: (e)=>handleInputChange(\"twitterUrl\", e.target.value),\n                                    placeholder: \"https://twitter.com/yourusername\",\n                                    style: {\n                                        width: \"100%\",\n                                        padding: \"14px 16px\",\n                                        border: \"1px solid rgba(255, 255, 255, 0.2)\",\n                                        borderRadius: \"12px\",\n                                        fontSize: \"16px\",\n                                        background: \"rgba(255, 255, 255, 0.05)\",\n                                        color: \"#FFFFFF\",\n                                        outline: \"none\",\n                                        transition: \"border-color 0.2s ease\",\n                                        boxSizing: \"border-box\"\n                                    },\n                                    onFocus: (e)=>e.target.style.borderColor = \"#0052FF\",\n                                    onBlur: (e)=>e.target.style.borderColor = \"rgba(255, 255, 255, 0.2)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1076,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                            lineNumber: 1066,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                marginBottom: \"24px\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    style: {\n                                        display: \"block\",\n                                        marginBottom: \"8px\",\n                                        fontWeight: \"600\",\n                                        color: \"#FFFFFF\",\n                                        fontSize: \"14px\"\n                                    },\n                                    children: \"Personal Website URL\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1099,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"url\",\n                                    value: userInfo.personalSiteUrl,\n                                    onChange: (e)=>handleInputChange(\"personalSiteUrl\", e.target.value),\n                                    placeholder: \"https://yourwebsite.com\",\n                                    style: {\n                                        width: \"100%\",\n                                        padding: \"14px 16px\",\n                                        border: \"1px solid rgba(255, 255, 255, 0.2)\",\n                                        borderRadius: \"12px\",\n                                        fontSize: \"16px\",\n                                        background: \"rgba(255, 255, 255, 0.05)\",\n                                        color: \"#FFFFFF\",\n                                        outline: \"none\",\n                                        transition: \"border-color 0.2s ease\",\n                                        boxSizing: \"border-box\"\n                                    },\n                                    onFocus: (e)=>e.target.style.borderColor = \"#0052FF\",\n                                    onBlur: (e)=>e.target.style.borderColor = \"rgba(255, 255, 255, 0.2)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1108,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                            lineNumber: 1098,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                marginBottom: \"24px\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    style: {\n                                        display: \"block\",\n                                        marginBottom: \"8px\",\n                                        fontWeight: \"600\",\n                                        color: \"#FFFFFF\",\n                                        fontSize: \"14px\"\n                                    },\n                                    children: \"Linktree URL\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1131,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"url\",\n                                    value: userInfo.linktreeUrl,\n                                    onChange: (e)=>handleInputChange(\"linktreeUrl\", e.target.value),\n                                    placeholder: \"https://linktr.ee/yourusername\",\n                                    style: {\n                                        width: \"100%\",\n                                        padding: \"14px 16px\",\n                                        border: \"1px solid rgba(255, 255, 255, 0.2)\",\n                                        borderRadius: \"12px\",\n                                        fontSize: \"16px\",\n                                        background: \"rgba(255, 255, 255, 0.05)\",\n                                        color: \"#FFFFFF\",\n                                        outline: \"none\",\n                                        transition: \"border-color 0.2s ease\",\n                                        boxSizing: \"border-box\"\n                                    },\n                                    onFocus: (e)=>e.target.style.borderColor = \"#0052FF\",\n                                    onBlur: (e)=>e.target.style.borderColor = \"rgba(255, 255, 255, 0.2)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1140,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                            lineNumber: 1130,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                marginBottom: \"24px\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    style: {\n                                        display: \"block\",\n                                        marginBottom: \"8px\",\n                                        fontWeight: \"600\",\n                                        color: \"#FFFFFF\",\n                                        fontSize: \"14px\"\n                                    },\n                                    children: \"CDP Project ID *\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1164,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"text\",\n                                    value: userInfo.cdpProjectId,\n                                    onChange: (e)=>handleInputChange(\"cdpProjectId\", e.target.value),\n                                    placeholder: \"Get from https://portal.cdp.coinbase.com\",\n                                    style: {\n                                        width: \"100%\",\n                                        padding: \"14px 16px\",\n                                        border: \"1px solid rgba(255, 255, 255, 0.2)\",\n                                        borderRadius: \"12px\",\n                                        fontSize: \"16px\",\n                                        background: \"rgba(255, 255, 255, 0.05)\",\n                                        color: \"#FFFFFF\",\n                                        outline: \"none\",\n                                        transition: \"border-color 0.2s ease\",\n                                        boxSizing: \"border-box\"\n                                    },\n                                    onFocus: (e)=>e.target.style.borderColor = \"#0052FF\",\n                                    onBlur: (e)=>e.target.style.borderColor = \"rgba(255, 255, 255, 0.2)\",\n                                    required: true\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1173,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"small\", {\n                                    style: {\n                                        color: \"#a3a3a3\",\n                                        fontSize: \"12px\",\n                                        display: \"block\",\n                                        marginTop: \"4px\"\n                                    },\n                                    children: \"Get this from your CDP Portal project settings\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1194,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                            lineNumber: 1163,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                marginBottom: \"32px\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    style: {\n                                        display: \"block\",\n                                        marginBottom: \"8px\",\n                                        fontWeight: \"600\",\n                                        color: \"#FFFFFF\",\n                                        fontSize: \"14px\"\n                                    },\n                                    children: \"Your Wallet Address *\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1205,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"text\",\n                                    value: userInfo.walletAddress,\n                                    onChange: (e)=>handleInputChange(\"walletAddress\", e.target.value),\n                                    placeholder: \"0x1234567890123456789012345678901234567890\",\n                                    style: {\n                                        width: \"100%\",\n                                        padding: \"14px 16px\",\n                                        border: \"1px solid rgba(255, 255, 255, 0.2)\",\n                                        borderRadius: \"12px\",\n                                        fontSize: \"16px\",\n                                        background: \"rgba(255, 255, 255, 0.05)\",\n                                        color: \"#FFFFFF\",\n                                        outline: \"none\",\n                                        transition: \"border-color 0.2s ease\",\n                                        fontFamily: 'Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n                                        boxSizing: \"border-box\"\n                                    },\n                                    onFocus: (e)=>e.target.style.borderColor = \"#0052FF\",\n                                    onBlur: (e)=>e.target.style.borderColor = \"rgba(255, 255, 255, 0.2)\",\n                                    required: true\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1214,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"small\", {\n                                    style: {\n                                        color: \"#a3a3a3\",\n                                        fontSize: \"12px\",\n                                        display: \"block\",\n                                        marginTop: \"4px\"\n                                    },\n                                    children: \"Where you want to receive donations (your Ethereum/Base wallet address)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1236,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                            lineNumber: 1204,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"button\",\n                            onClick: generateCustomPrompt,\n                            disabled: !userInfo.name || !userInfo.cdpProjectId || !userInfo.walletAddress,\n                            style: {\n                                width: \"100%\",\n                                padding: \"16px\",\n                                backgroundColor: userInfo.name && userInfo.cdpProjectId && userInfo.walletAddress ? \"#0052FF\" : \"#444444\",\n                                color: \"#FFFFFF\",\n                                border: \"none\",\n                                borderRadius: \"12px\",\n                                fontSize: \"16px\",\n                                fontWeight: \"600\",\n                                cursor: userInfo.name && userInfo.cdpProjectId && userInfo.walletAddress ? \"pointer\" : \"not-allowed\",\n                                transition: \"all 0.2s ease\",\n                                opacity: userInfo.name && userInfo.cdpProjectId && userInfo.walletAddress ? 1 : 0.6,\n                                boxSizing: \"border-box\"\n                            },\n                            onMouseEnter: (e)=>{\n                                if (userInfo.name && userInfo.cdpProjectId && userInfo.walletAddress) {\n                                    e.target.style.backgroundColor = \"#0041CC\";\n                                    e.target.style.transform = \"translateY(-1px)\";\n                                }\n                            },\n                            onMouseLeave: (e)=>{\n                                if (userInfo.name && userInfo.cdpProjectId && userInfo.walletAddress) {\n                                    e.target.style.backgroundColor = \"#0052FF\";\n                                    e.target.style.transform = \"translateY(0)\";\n                                }\n                            },\n                            children: \"Create Prompt\"\n                        }, void 0, false, {\n                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                            lineNumber: 1246,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                    lineNumber: 889,\n                    columnNumber: 11\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                display: \"flex\",\n                                justifyContent: \"space-between\",\n                                alignItems: \"center\",\n                                marginBottom: \"24px\",\n                                padding: \"20px\",\n                                background: \"rgba(0, 82, 255, 0.1)\",\n                                borderRadius: \"12px\",\n                                border: \"1px solid rgba(0, 82, 255, 0.3)\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                            style: {\n                                                color: \"#0052FF\",\n                                                margin: \"0 0 5px 0\",\n                                                fontSize: \"20px\",\n                                                fontWeight: \"700\"\n                                            },\n                                            children: \"✅ Your Custom Prompt is Ready!\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                            lineNumber: 1293,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            style: {\n                                                color: \"#a3a3a3\",\n                                                margin: 0,\n                                                fontSize: \"14px\"\n                                            },\n                                            children: [\n                                                \"Personalized for \",\n                                                userInfo.name,\n                                                \"'s linktree donations\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                            lineNumber: 1301,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1292,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        display: \"flex\",\n                                        gap: \"12px\"\n                                    },\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: copyToClipboard,\n                                            style: {\n                                                padding: \"10px 20px\",\n                                                backgroundColor: \"#0052FF\",\n                                                color: \"#FFFFFF\",\n                                                border: \"none\",\n                                                borderRadius: \"8px\",\n                                                cursor: \"pointer\",\n                                                fontSize: \"14px\",\n                                                fontWeight: \"600\",\n                                                transition: \"all 0.2s ease\"\n                                            },\n                                            onMouseEnter: (e)=>{\n                                                e.target.style.backgroundColor = \"#0041CC\";\n                                                e.target.style.transform = \"translateY(-1px)\";\n                                            },\n                                            onMouseLeave: (e)=>{\n                                                e.target.style.backgroundColor = \"#0052FF\";\n                                                e.target.style.transform = \"translateY(0)\";\n                                            },\n                                            children: \"\\uD83D\\uDCCB Copy Prompt\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                            lineNumber: 1310,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>setShowPrompt(false),\n                                            style: {\n                                                padding: \"10px 20px\",\n                                                backgroundColor: \"#444444\",\n                                                color: \"#FFFFFF\",\n                                                border: \"none\",\n                                                borderRadius: \"8px\",\n                                                cursor: \"pointer\",\n                                                fontSize: \"14px\",\n                                                fontWeight: \"600\",\n                                                transition: \"all 0.2s ease\"\n                                            },\n                                            onMouseEnter: (e)=>{\n                                                e.target.style.backgroundColor = \"#555555\";\n                                                e.target.style.transform = \"translateY(-1px)\";\n                                            },\n                                            onMouseLeave: (e)=>{\n                                                e.target.style.backgroundColor = \"#444444\";\n                                                e.target.style.transform = \"translateY(0)\";\n                                            },\n                                            children: \"← Back to Form\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                            lineNumber: 1334,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                    lineNumber: 1309,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                            lineNumber: 1282,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                background: \"#222222\",\n                                border: \"1px solid rgba(255, 255, 255, 0.1)\",\n                                borderRadius: \"12px\",\n                                padding: \"24px\",\n                                maxHeight: \"600px\",\n                                overflowY: \"auto\"\n                            },\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                style: {\n                                    whiteSpace: \"pre-wrap\",\n                                    wordWrap: \"break-word\",\n                                    fontSize: \"13px\",\n                                    lineHeight: \"1.6\",\n                                    margin: 0,\n                                    fontFamily: 'Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n                                    color: \"#FFFFFF\"\n                                },\n                                children: generatedPrompt\n                            }, void 0, false, {\n                                fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                                lineNumber: 1369,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                            lineNumber: 1361,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n                    lineNumber: 1281,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n            lineNumber: 874,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/ashnouruzi/embbed-wallet-docs/prompt-generator/app/page.tsx\",\n        lineNumber: 867,\n        columnNumber: 5\n    }, this);\n}\n_s(PromptGenerator, \"ZyiP0m2V6OrxjAeFQ8yigsqplMY=\");\n_c = PromptGenerator;\nvar _c;\n$RefreshReg$(_c, \"PromptGenerator\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement$1(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement$1(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (hasOwnProperty.call(props, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(props).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV = jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/YmE4NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fashnouruzi%2Fembbed-wallet-docs%2Fprompt-generator%2Fapp%2Fpage.tsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);